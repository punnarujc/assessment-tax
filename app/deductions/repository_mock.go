// Code generated by mockery v2.38.0. DO NOT EDIT.

package deductions

import (
	decimal "github.com/shopspring/decimal"
	mock "github.com/stretchr/testify/mock"
)

// MockRepository is an autogenerated mock type for the Repository type
type MockRepository struct {
	mock.Mock
}

// UpsertMaximumDeduction provides a mock function with given fields: allowanceType, amount
func (_m *MockRepository) UpsertMaximumDeduction(allowanceType string, amount decimal.Decimal) error {
	ret := _m.Called(allowanceType, amount)

	if len(ret) == 0 {
		panic("no return value specified for UpsertMaximumDeduction")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, decimal.Decimal) error); ok {
		r0 = rf(allowanceType, amount)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockRepository creates a new instance of MockRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockRepository {
	mock := &MockRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
